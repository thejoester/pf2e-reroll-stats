name: Release Creation

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
    
    # pin Node + enable npm cache
      - name: Setup Node (pin)
        uses: actions/setup-node@v4
        with:
          node-version: '22.20.0'
          cache: 'npm'

    # make sure @foundryvtt scope resolves to npmjs.org every run
      - name: NPM sanity + registry
        run: |
          npm -v
          npm config set registry https://registry.npmjs.org/
          npm config set @foundryvtt:registry https://registry.npmjs.org/
          npm ping

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Extract Version From Tag
        id: get_version
        uses: battila7/get-version-action@v2

    # Use tagged manifest for prerelease; latest for stable
      - name: Set manifest URL for channel (stable vs prerelease)
        id: set_manifest
        run: |
          if [ "${{ github.event.release.prerelease }}" = "true" ]; then
            echo "manifest_url=https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/module.json" >> $GITHUB_OUTPUT
          else
            echo "manifest_url=https://github.com/${{ github.repository }}/releases/latest/download/module.json" >> $GITHUB_OUTPUT
          fi

      - name: Modify Module Manifest With Release-Specific Values
        id: sub_manifest_link_version
        uses: microsoft/variable-substitution@v1
        with:
          files: "module.json"
        env:
          version: ${{ steps.get_version.outputs.version-without-v }}
          manifest: ${{ steps.set_manifest.outputs.manifest_url }}
          download: https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/pf2e_reroll_stats.zip

    # --- Build packs from committed _source 
      - name: Install Foundry CLI (robust)
        shell: bash
        run: |
          set -e
          n=0
          until [ $n -ge 3 ]; do
            if npm i -D @foundryvtt/foundryvtt-cli@3 --no-audit --fund=false; then
              ok=1; break
            fi
            n=$((n+1)); echo "npm install retry $n..."; sleep 5
          done
          if [ -z "${ok:-}" ]; then
            echo "npm install failed; attempting direct tarball for foundryvtt-cliâ€¦"
            npm i -D https://registry.npmjs.org/@foundryvtt/foundryvtt-cli/-/foundryvtt-cli-3.0.0.tgz
          fi

    # Optional: fail fast if _source is missing or dupes exist
      - name: Verify extracted packs (no dupes)
        run: node _build/verify-extracted-packs.mjs

      - name: Compile packs from _source
        run: node _build/compile-all-packs.mjs

    # Useful tree dump for debugging
      - name: Show packs tree
        run: |
          echo "==== packs tree ===="
          find packs -maxdepth 2 -type f -printf "%p (%k KB)\n" | sort

    # --- Package & publish 
      - name: Create Module Archive
        run: |
          mkdir -p dist
          if [ -f LICENSE.md ]; then LIC="LICENSE.md"; else LIC="LICENSE"; fi
          zip -r dist/pf2e_reroll_stats.zip \
            module.json README.md "$LIC" CHANGELOG.md README.md \
            scripts/ packs/ lang/ \
            -x "packs/*/_source/*"

      - uses: release-flow/keep-a-changelog-action@v3
        id: changelog
        with:
          command: query
          version: ${{ steps.get_version.outputs.version-without-v }}

      - name: Update Release With Files
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          draft: ${{ github.event.release.draft }}
          prerelease: ${{ github.event.release.prerelease }}
          name: ${{ steps.get_version.outputs.version-without-v }}
          body: ${{ steps.changelog.outputs.release-notes }}
          artifacts: "module.json, dist/pf2e_reroll_stats.zip"

      - name: Publish Module to FoundryVTT Website
        id: publish-to-foundry-website
        if: ${{ ! github.event.release.prerelease }}
        uses: cs96and/FoundryVTT-release-package@v1
        with:
          package-token: ${{ secrets.FOUNDRY_RELEASE_TOKEN }}
          manifest-url: https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/module.json
